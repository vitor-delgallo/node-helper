const{Octokit:Octokit}=require("@octokit/rest"),VDGenericHelper=require("./generic.min.js"),fs=require("fs");require("dotenv").config();class VDGithubHelper{static get CONFIGS(){return{token:process.env.VD_GITHUB_TOKEN??null,owner:process.env.VD_GITHUB_OWNER??null,maxTentativas:process.env.VD_GITHUB_RETRYS??3,commitAuthor:{name:process.env.VD_GITHUB_AUTHOR??null,email:process.env.VD_GITHUB_EMAIL_AUTHOR??null}}}static octokit=new Octokit({auth:this.CONFIGS.token});static async uploadFile(t,e,r,o,i=null,a=1){try{const a=fs.readFileSync(r,"utf8"),s=Buffer.from(a).toString("base64");let n;try{const{data:r}=await this.octokit.repos.getContent({owner:this.CONFIGS.owner,repo:t,path:o,ref:e});n=r.sha}catch(t){if(404!==t.status)return console.error("Erro ao verificar existÃªncia do arquivo:",t),!1}return await this.octokit.repos.createOrUpdateFileContents({owner:this.CONFIGS.owner,repo:t,path:o,message:i??(n?"Updating file via automated integration":"Creating file via automated integration"),content:s,sha:n,branch:e,committer:this.CONFIGS.commitAuthor,author:this.CONFIGS.commitAuthor}),console.log("File successfully uploaded!"),!0}catch(s){return a<=this.CONFIGS.maxTentativas&&409===s.status?(await VDGenericHelper.delay(300),await this.uploadFile(t,e,r,o,i,a+1)):(console.error("Error uploading file:",s),!1)}}}module.exports=VDGithubHelper;